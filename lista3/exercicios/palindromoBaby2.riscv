.data
quebraLinha: .asciz  "\n"

.text
li a7, 5  	#registrando o codigo de ação -> leitura de inteiro
ecall		#chamada de sistema do cod de acao
mv s1, a0	#s1 = a0
addi a0, a0, 1


li a7, 9	#registrando -> MALLOC 
ecall		#chamada de sist -> a0 = malloc(a0) 
mv s2, a0	#movendo o ponteiro s2 = a0

li a7, 8 	#cod de ação -> ler string 
addi a1, s1, 1	#a1 = tamanho max a se ler da String
ecall

#buscar ultimo ponteiro da string
addi t1, s1, -1
add s3, s2,t1    #s3  = s2 + (s1 -1) 

#pecorrear a string 
loop:
	ble s3, s2, palindromoBaby
	lbu t1, 0(s2)   # Carrega um byte do inicio da string
	lbu t2, 0(s3)   # Carrega um byte do fim da string

	bne t1, t2, naoPalindromo
	
      	addi s2, s2, 1 	#pular pra prox letra da string, incrementando ->
      	addi s3, s3, -1 #pular pra prox letra da string, decrementando     <-
      	j loop



palindromoBaby:
li a0, 1	
li a7, 1	
ecall		
j end		

naoPalindromo:
mv a0, zero
li a7, 1
ecall

end:

	# Quebra de linha
      li a7, 4
      la a0, quebraLinha
      ecall

      # Finaliza o programa
      li a7, 10
      ecall









